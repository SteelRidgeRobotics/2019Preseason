// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "ctre/Phoenix.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainTalonRightFront;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainTalonLeftFront;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainTalonLeftRear;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainTalonRightRear;
std::shared_ptr<frc::RobotDrive> RobotMap::driveTrainRobotDrive;
std::shared_ptr<WPI_TalonSRX> RobotMap::liftTalonLift;
std::shared_ptr<frc::Encoder> RobotMap::liftEncoder;
std::shared_ptr<frc::PIDController> RobotMap::liftLiftController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    driveTrainTalonRightFront.reset(new WPI_TalonSRX(2));
    
    
    driveTrainTalonLeftFront.reset(new WPI_TalonSRX(0));
    
    
    driveTrainTalonLeftRear.reset(new WPI_TalonSRX(1));
    
    
    driveTrainTalonRightRear.reset(new WPI_TalonSRX(3));
    
    
    driveTrainRobotDrive.reset(new frc::RobotDrive(driveTrainTalonLeftFront, driveTrainTalonLeftRear,
              driveTrainTalonRightFront, driveTrainTalonRightRear));
    
    driveTrainRobotDrive->SetSafetyEnabled(false);
        driveTrainRobotDrive->SetExpiration(0.1);
        driveTrainRobotDrive->SetSensitivity(0.5);
        driveTrainRobotDrive->SetMaxOutput(1.0);
        driveTrainRobotDrive->SetInvertedMotor(frc::RobotDrive::kFrontLeftMotor, true);
        driveTrainRobotDrive->SetInvertedMotor(frc::RobotDrive::kRearLeftMotor, true);
    liftTalonLift.reset(new WPI_TalonSRX(4));
    
    
    liftEncoder.reset(new frc::Encoder(0, 1, false, frc::Encoder::k4X));
    lw->AddSensor("Lift", "Encoder", liftEncoder);
    liftEncoder->SetDistancePerPulse(1.0);
    liftEncoder->SetPIDSourceType(frc::PIDSourceType::kRate);
    liftLiftController.reset(new frc::PIDController(1.0, 0.0, 0.0,/* F: 0.0, */ liftEncoder.get(), liftTalonLift.get(), 0.02));
    lw->AddActuator("Lift", "Lift Controller", liftLiftController);
    liftLiftController->SetContinuous(false); liftLiftController->SetAbsoluteTolerance(0.2); 
    liftLiftController->SetOutputRange(-1.0, 1.0);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
